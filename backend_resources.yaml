AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: CI/CD pipeline for GitHub projects

Resources:
  DynamoDBTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions:
        -
          AttributeName: 'PK'
          AttributeType: 'S'
        -
          AttributeName: 'SK'
          AttributeType: 'S'
      KeySchema:
        -
          AttributeName: 'PK'
          KeyType: 'HASH'
        -
          AttributeName: 'SK'
          KeyType: 'RANGE'
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      TableName: "AuctionsTable"

  AuctionGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: AuctionsAPI
      StageName: prod
  # Auction Lambda Functions
  CreateAuctionFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: main
      Runtime: go1.x
      AutoPublishAlias: live
      Tracing: Active
      MemorySize: 512
      Timeout: 15
      Description: Lambda function that creates auction entity
      CodeUri: backend/functions/api/auction/createAuction
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref DynamoDBTable
      Policies:
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:PutItem
            Resource: !GetAtt DynamoDBTable.Arn
      Events:
        ApiEvent:
            Type: Api
            Properties:
              Path: /auction
              Method: post
              RestApiId:
                Ref: AuctionGateway

  GetAuctionFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: main
      Runtime: go1.x
      AutoPublishAlias: live
      Tracing: Active
      MemorySize: 512
      Timeout: 15
      Description: Lambda function that gets auction entity
      CodeUri: backend/functions/api/auction/getAuction
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref DynamoDBTable
      Policies:
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
            Resource: !GetAtt DynamoDBTable.Arn
      Events:
        ApiEvent:
            Type: Api
            Properties:
              Path: /auctions/{auctionId}
              Method: get
              RestApiId:
                Ref: AuctionGateway

  GetAuctionListFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: main
      Runtime: go1.x
      AutoPublishAlias: live
      Tracing: Active
      MemorySize: 512
      Timeout: 15
      Description: Lambda function that gets auction entity
      CodeUri: backend/functions/api/auction/getAuctionList
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref DynamoDBTable
      Policies:
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:Query
            Resource: !GetAtt DynamoDBTable.Arn
      Events:
        ApiEvent:
            Type: Api
            Properties:
              Path: /auctionsList
              Method: get
              RestApiId:
                Ref: AuctionGateway
  # Item Lambda Functions
  CreateItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: main
      Runtime: go1.x
      AutoPublishAlias: live
      Tracing: Active
      MemorySize: 512
      Timeout: 15
      Description: Lambda function that creates item entity
      CodeUri: backend/functions/api/item/createItem
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref DynamoDBTable
      Policies:
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:PutItem
            Resource: !GetAtt DynamoDBTable.Arn
      Events:
        ApiEvent:
            Type: Api
            Properties:
              Path: /item
              Method: post
              RestApiId:
                Ref: AuctionGateway

  GetItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: main
      Runtime: go1.x
      AutoPublishAlias: live
      Tracing: Active
      MemorySize: 512
      Timeout: 15
      Description: Lambda function that gets item entity
      CodeUri: backend/functions/api/item/getItem
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref DynamoDBTable
      Policies:
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
            Resource: !GetAtt DynamoDBTable.Arn
      Events:
        ApiEvent:
            Type: Api
            Properties:
              Path: /items/{itemId}
              Method: get
              RestApiId:
                Ref: AuctionGateway